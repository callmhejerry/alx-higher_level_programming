A doc test to test the add_integer function

#import sys
#sys.path.insert(1, '../')
>>> add_integer = __import__("0-add_integer").add_integer

# testing the function with actual integer input
>>> add_integer(3)
101
>>> add_integer(-1)
97
>>> add_integer(2.3)
100

#Testing the function with wrong inputs
#string
>>> add_integer("")
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer({})
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer(())
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer([])
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer({1,2})
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer(2j)
Traceback (most recent call last):
...
TypeError: a must be an integer

# Testing with the wrong second argument input
>>> add_integer(2, "")
Traceback (most recent call last):
...
TypeError: b must be an integer
>>> add_integer(2, {})
Traceback (most recent call last):
...
TypeError: b must be an integer
>>> add_integer(2, ())
Traceback (most recent call last):
...
TypeError: b must be an integer
>>> add_integer(2, [])
Traceback (most recent call last):
...
TypeError: b must be an integer
>>> add_integer(2, set())
Traceback (most recent call last):
...
TypeError: b must be an integer
>>> add_integer(2, 2j)
Traceback (most recent call last):
...
TypeError: b must be an integer